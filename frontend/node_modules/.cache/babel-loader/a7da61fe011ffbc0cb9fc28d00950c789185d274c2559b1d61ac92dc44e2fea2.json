{"ast":null,"code":"import _objectSpread from\"/Users/brahimkhalilkhalef/Projects/ISIArchive/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{authAPI,tokenManager}from'../utils/api';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,isAuthenticated:false,isLoading:true,isLoggingIn:false,error:null};const authReducer=(state,action)=>{switch(action.type){case'AUTH_START':return _objectSpread(_objectSpread({},state),{},{isLoading:true,error:null});case'AUTH_SUCCESS':return _objectSpread(_objectSpread({},state),{},{user:action.payload,isAuthenticated:true,isLoading:false,error:null});case'AUTH_FAILURE':return _objectSpread(_objectSpread({},state),{},{user:null,isAuthenticated:false,isLoading:false,error:action.payload});case'LOGIN_START':return _objectSpread(_objectSpread({},state),{},{isLoggingIn:true,error:null});case'LOGIN_END':return _objectSpread(_objectSpread({},state),{},{isLoggingIn:false});case'LOGOUT':return _objectSpread(_objectSpread({},state),{},{user:null,isAuthenticated:false,isLoading:false,error:null});case'CLEAR_ERROR':return _objectSpread(_objectSpread({},state),{},{error:null});case'UPDATE_USER':return _objectSpread(_objectSpread({},state),{},{user:action.payload});default:return state;}};const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Check authentication status on app load\nuseEffect(()=>{const checkAuth=async()=>{const token=tokenManager.getToken();if(!token){dispatch({type:'AUTH_FAILURE',payload:'No token found'});return;}try{dispatch({type:'AUTH_START'});const response=await authAPI.getProfile();dispatch({type:'AUTH_SUCCESS',payload:response.data.user});}catch(error){console.error('Auth check failed:',error);tokenManager.clearAll();dispatch({type:'AUTH_FAILURE',payload:'Session expired'});}};checkAuth();},[]);const login=async credentials=>{try{dispatch({type:'LOGIN_START'});dispatch({type:'AUTH_START'});const response=await authAPI.login(credentials);// Store tokens\ntokenManager.setToken(response.data.accessToken);tokenManager.setRefreshToken(response.data.refreshToken);dispatch({type:'AUTH_SUCCESS',payload:response.data.user});dispatch({type:'LOGIN_END'});toast.success('Connexion réussie!');}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Erreur de connexion';dispatch({type:'AUTH_FAILURE',payload:errorMessage});dispatch({type:'LOGIN_END'});throw error;}};const logout=async()=>{try{await authAPI.logout();}catch(error){console.error('Logout error:',error);}finally{tokenManager.clearAll();dispatch({type:'LOGOUT'});toast.success('Déconnexion réussie');}};const logoutAll=async()=>{try{await authAPI.logoutAll();}catch(error){console.error('Logout all error:',error);}finally{tokenManager.clearAll();dispatch({type:'LOGOUT'});toast.success('Déconnexion de tous les appareils réussie');}};const updateProfile=async data=>{try{const response=await authAPI.updateProfile(data);dispatch({type:'UPDATE_USER',payload:response.data.user});toast.success('Profil mis à jour avec succès');}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Erreur lors de la mise à jour';toast.error(errorMessage);throw error;}};const clearError=()=>{dispatch({type:'CLEAR_ERROR'});};const value=_objectSpread(_objectSpread({},state),{},{login,logout,logoutAll,updateProfile,clearError});return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","tokenManager","toast","jsx","_jsx","initialState","user","isAuthenticated","isLoading","isLoggingIn","error","authReducer","state","action","type","_objectSpread","payload","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","dispatch","checkAuth","token","getToken","response","getProfile","data","console","clearAll","login","credentials","setToken","accessToken","setRefreshToken","refreshToken","success","_error$response","_error$response$data","errorMessage","message","logout","logoutAll","updateProfile","_error$response2","_error$response2$data","clearError","value","Provider"],"sources":["/Users/brahimkhalilkhalef/Projects/ISIArchive/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { User, LoginCredentials, AuthResponse } from '../types';\nimport { authAPI, tokenManager } from '../utils/api';\nimport toast from 'react-hot-toast';\n\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  isLoggingIn: boolean;\n  error: string | null;\n}\n\ntype AuthAction =\n  | { type: 'AUTH_START' }\n  | { type: 'AUTH_SUCCESS'; payload: User }\n  | { type: 'AUTH_FAILURE'; payload: string }\n  | { type: 'LOGIN_START' }\n  | { type: 'LOGIN_END' }\n  | { type: 'LOGOUT' }\n  | { type: 'CLEAR_ERROR' }\n  | { type: 'UPDATE_USER'; payload: User };\n\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginCredentials) => Promise<void>;\n  logout: () => Promise<void>;\n  logoutAll: () => Promise<void>;\n  updateProfile: (data: { prenom?: string; nom?: string }) => Promise<void>;\n  clearError: () => void;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  isLoggingIn: false,\n  error: null,\n};\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case 'LOGIN_START':\n      return {\n        ...state,\n        isLoggingIn: true,\n        error: null,\n      };\n    case 'LOGIN_END':\n      return {\n        ...state,\n        isLoggingIn: false,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check authentication status on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = tokenManager.getToken();\n      if (!token) {\n        dispatch({ type: 'AUTH_FAILURE', payload: 'No token found' });\n        return;\n      }\n\n      try {\n        dispatch({ type: 'AUTH_START' });\n        const response = await authAPI.getProfile();\n        dispatch({ type: 'AUTH_SUCCESS', payload: response.data.user });\n      } catch (error: any) {\n        console.error('Auth check failed:', error);\n        tokenManager.clearAll();\n        dispatch({ type: 'AUTH_FAILURE', payload: 'Session expired' });\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (credentials: LoginCredentials) => {\n    try {\n      dispatch({ type: 'LOGIN_START' });\n      dispatch({ type: 'AUTH_START' });\n      const response: AuthResponse = await authAPI.login(credentials);\n      \n      // Store tokens\n      tokenManager.setToken(response.data.accessToken);\n      tokenManager.setRefreshToken(response.data.refreshToken);\n      \n      dispatch({ type: 'AUTH_SUCCESS', payload: response.data.user });\n      dispatch({ type: 'LOGIN_END' });\n      toast.success('Connexion réussie!');\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || 'Erreur de connexion';\n      dispatch({ type: 'AUTH_FAILURE', payload: errorMessage });\n      dispatch({ type: 'LOGIN_END' });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      tokenManager.clearAll();\n      dispatch({ type: 'LOGOUT' });\n      toast.success('Déconnexion réussie');\n    }\n  };\n\n  const logoutAll = async () => {\n    try {\n      await authAPI.logoutAll();\n    } catch (error) {\n      console.error('Logout all error:', error);\n    } finally {\n      tokenManager.clearAll();\n      dispatch({ type: 'LOGOUT' });\n      toast.success('Déconnexion de tous les appareils réussie');\n    }\n  };\n\n  const updateProfile = async (data: { prenom?: string; nom?: string }) => {\n    try {\n      const response = await authAPI.updateProfile(data);\n      dispatch({ type: 'UPDATE_USER', payload: response.data.user });\n      toast.success('Profil mis à jour avec succès');\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || 'Erreur lors de la mise à jour';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  const value: AuthContextType = {\n    ...state,\n    login,\n    logout,\n    logoutAll,\n    updateProfile,\n    clearError,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}